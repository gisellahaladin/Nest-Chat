import * as jwt from 'jsonwebtoken';

function getClientAuthToken(app_id, app_secret, payload) {
    if (!payload || !payload.user_id || !payload.organization_id) {
        // You can't get here in TS -- it's a TS type error -- but not everyone uses
        // TS.
        throw new Error('Missing user_id or organization_id. ' +
            'A token without a user_id and organization_id is an administrative server auth token ' +
            '(which should never be given to clients). ' +
            'If you intended to generate a server auth token, call getServerAuthToken instead.');
    }
    return jwt.sign({ ...payload, app_id }, app_secret, {
        algorithm: 'HS512',
        expiresIn: '1 min',
    });
}
function getServerAuthToken(app_id, app_secret) {
    return jwt.sign({ app_id }, app_secret, {
        algorithm: 'HS512',
        expiresIn: '1 min',
    });
}
function getApplicationManagementAuthToken(customer_id, customer_secret) {
    return jwt.sign({ customer_id }, customer_secret, {
        algorithm: 'HS512',
        expiresIn: '1 min',
    });
}

export { getApplicationManagementAuthToken, getClientAuthToken, getServerAuthToken };
//# sourceMappingURL=index.js.map
